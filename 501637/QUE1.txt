CREATE SEQUENCE ID_SEQ
  MINVALUE 1
  MAXVALUE 999999999999999999999999999
  START WITH 11
  INCREMENT BY 1
  NOCACHE;



CREATE OR REPLACE PROCEDURE NEW_BOOKING
(P_VEHICLE_ID BOOKING.VEHICLE_ID%TYPE,
 P_CUST_ID BOOKING.CUST_ID%TYPE,
 P_TRAINING_DATE BOOKING.TRAINING_DATE_TIME%TYPE,
 P_DURATION BOOKING.DURATION%TYPE) IS

 V_CNT_CUST NUMBER(1);
 V_CNT_VEH NUMBER(1);

 E_INVALID_CUST EXCEPTION;
 E_INVALID_VEH EXCEPTION;
 E_INVALID_DATE EXCEPTION;
 E_INVALID_DURATION EXCEPTION;

BEGIN
	SELECT COUNT(1) INTO V_CNT_CUST FROM CUSTOMER WHERE CUST_ID = P_CUST_ID;
	SELECT COUNT(1) INTO V_CNT_VEH FROM VEHICLE WHERE VEHICLE_ID = P_VEHICLE_ID;
	IF V_CNT_CUST = 0 THEN
		RAISE E_INVALID_CUST;
	ELSIF V_CNT_VEH = 0 THEN
		RAISE E_INVALID_VEH;
	ELSIF P_TRAINING_DATE > SYSDATE THEN
		RAISE E_INVALID_DATE;
	ELSIF P_DURATION NOT BETWEEN 1 AND 2 THEN
		RAISE E_INVALID_DURATION;
	--ELSE
		--INSERT INTO BOOKING
		--VALUES(ID_SEQ.NEXTVAL,P_VEHICLE,P_CUST_ID,P_TRAINING_DATE,P_DURATION);

	END IF;

EXCEPTION
	WHEN E_INVALID_CUST THEN
	DBMS_OUTPUT.PUT_LINE('INVALID CUSTOMER ID');
	WHEN E_INVALID_VEH THEN
	DBMS_OUTPUT.PUT_LINE('INVALID VEHICLE ID');
	WHEN E_INVALID_DATE THEN
	DBMS_OUTPUT.PUT_LINE('INVALID DATE');
	WHEN E_INVALID_DURATION THEN
	DBMS_OUTPUT.PUT_LINE('INVALID DURATION');

END NEW_BOOKING;
/

--CALLING
EXEC NEW_BOOKING(1,102,'04-SEP-16',3);
